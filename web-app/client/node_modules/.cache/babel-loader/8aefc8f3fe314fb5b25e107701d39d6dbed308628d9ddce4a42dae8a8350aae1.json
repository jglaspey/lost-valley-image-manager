{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'/api';const apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},withCredentials:true});// Add request interceptor for error handling\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Handle unauthorized access\nwindow.location.href='/login';}return Promise.reject(error);});export const imageApi={// Get paginated images\ngetImages:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await apiClient.get('/images',{params});return response.data;},// Get single image by ID\ngetImage:async id=>{const response=await apiClient.get(`/images/${id}`);return response.data;},// Update image metadata\nupdateImageMetadata:async(id,metadata)=>{const response=await apiClient.put(`/images/${id}/metadata`,metadata);return response.data;},// Advanced search with filters\nsearchImages:async filters=>{const response=await apiClient.post('/search',filters);return response.data;},// Get search suggestions\ngetSearchSuggestions:async query=>{const response=await apiClient.get('/search/suggestions',{params:{q:query}});return response.data;}};export const statsApi={// Get full statistics\ngetStats:async()=>{const response=await apiClient.get('/stats');return response.data;},// Get summary statistics\ngetSummaryStats:async()=>{const response=await apiClient.get('/stats/summary');return response.data;}};export const healthApi={// Check API health\ncheckHealth:async()=>{const response=await apiClient.get('/health');return response.data;}};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","headers","withCredentials","interceptors","response","use","error","_error$response","status","window","location","href","Promise","reject","imageApi","getImages","params","arguments","length","undefined","get","data","getImage","id","updateImageMetadata","metadata","put","searchImages","filters","post","getSearchSuggestions","query","q","statsApi","getStats","getSummaryStats","healthApi","checkHealth"],"sources":["/Users/jasonglaspey/Coding/Lost Valley - Image Management/web-app/client/src/api/client.ts"],"sourcesContent":["import axios from 'axios';\nimport { ProcessedImage, ImageSearchResponse, StatsResponse, SummaryStats, SearchFilters } from '../types/image';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || '/api';\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true,\n});\n\n// Add request interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Handle unauthorized access\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const imageApi = {\n  // Get paginated images\n  getImages: async (params: {\n    page?: number;\n    limit?: number;\n    sort?: string;\n    order?: string;\n    status?: string;\n  } = {}): Promise<ImageSearchResponse> => {\n    const response = await apiClient.get('/images', { params });\n    return response.data;\n  },\n\n  // Get single image by ID\n  getImage: async (id: string): Promise<ProcessedImage> => {\n    const response = await apiClient.get(`/images/${id}`);\n    return response.data;\n  },\n\n  // Update image metadata\n  updateImageMetadata: async (id: string, metadata: Partial<ProcessedImage>): Promise<{ message: string }> => {\n    const response = await apiClient.put(`/images/${id}/metadata`, metadata);\n    return response.data;\n  },\n\n  // Advanced search with filters\n  searchImages: async (filters: SearchFilters & { page?: number; limit?: number; sort?: string; order?: string }): Promise<ImageSearchResponse> => {\n    const response = await apiClient.post('/search', filters);\n    return response.data;\n  },\n\n  // Get search suggestions\n  getSearchSuggestions: async (query: string): Promise<{ suggestions: string[] }> => {\n    const response = await apiClient.get('/search/suggestions', { params: { q: query } });\n    return response.data;\n  },\n};\n\nexport const statsApi = {\n  // Get full statistics\n  getStats: async (): Promise<StatsResponse> => {\n    const response = await apiClient.get('/stats');\n    return response.data;\n  },\n\n  // Get summary statistics\n  getSummaryStats: async (): Promise<SummaryStats> => {\n    const response = await apiClient.get('/stats/summary');\n    return response.data;\n  },\n};\n\nexport const healthApi = {\n  // Check API health\n  checkHealth: async (): Promise<{ status: string; timestamp: string; uptime: number; environment: string }> => {\n    const response = await apiClient.get('/health');\n    return response.data;\n  },\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}